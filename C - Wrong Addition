#include<bits/stdc++.h>
using namespace std;
#define int              long long
#define all(xs)          xs.begin(), xs.end()
#define rall(xs)         xs.rbegin(), xs.rend()
#define sz(x)            (int)((x).size())
#define pb               push_back
#define ppb              pop_back
#define pf               push_front
#define ppf              pop_front
#define ff               first
#define ss               second
#define prec(n)          fixed<<setprecision(n)
#define debug(x)         cout << (#x) << " is " << (x) << "\n"
#define debug2(x, y)     cout << #x << "=" << x << "," << #y << "=" << y << "\n"
#define debug3(x, y,z)   cout << #x << "=" << x << "," << #y << "=" << y << "," << #z << "=" << z << "\n"
#define debug4(x, y,z,a) cout << #x << "=" << x << "," << #y << "=" << y << "," << #z << "=" << z <<" "<<#a << "=" << a << "\n"
#define yes              cout<<"YES";
#define no               cout<<"NO";
#define ll               cout<<"\n";
#define SZ               2e9
int gcd(int A,int B){    return (B == 0) ? A : gcd(B, A % B);}
int lcm(int A,int B){    return A * B / gcd(A, B);}
const int N=1e5+10;
const int NN=1e9+10;
const int mod = 1e9 + 7;

void solve(){
    string a; cin >> a;
    string sum; cin >> sum;
    int index = a.length()-1;
    string ans;
    int i;
    for( i = sum.length() - 1; i >= 0; i--){
        if(index < 0){
            break;
        }
        int sumdig = sum[i] - '0';
        int adig = a[index] - '0';
        if(adig > sumdig){
            if(i-1 >= 0){
                int tbt = sum[i-1] - '0';
                int num = tbt*10;
                num+=sumdig;
                // debug(num);
                if(num==0){
                    cout<< -1;ll;return;
                }
                int dif = num - adig;
                if(dif >= 10 or dif < 0){
                    cout<< -1;ll;return;
                }
                char ch = dif + '0';
                ans = ch + ans;
                i--;
            }
            else{
                cout<< -1;ll;return;
            }
        }
        else{
            int num = sumdig;
            int dif = num - adig;
            char ch = dif + '0';
            ans = ch + ans;
        }
        // debug(ans);
        index --;
    }
    // debug(ans);
    if(index>=0){
        cout<< -1;ll;return;
    }
    if(i>=0){
        // debug2(ans, sum.substr(0, (i+1)));
        ans = sum.substr(0, (i+1)) + ans;
    }
    string tt;
    for(int i=0;i<ans.size(); i++){
        if(ans[i]=='0'){
            
        }
        if(ans[i]!='0'){
            for(int k=i; k<ans.length(); k++){
                tt+=ans[k];
            }
            break;
        }
        if(ans[i]!='0' or i-1>=0 and ans[i-1]!='0'){
            for(int k=i; k<ans.length(); k++){
                tt+=ans[k];
            }
            break;
        }
    }
    if(tt==""){
        tt = "0";
    }
    cout<<tt;ll;
    return;
} 

signed main(){
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false), cin.tie(NULL);
    int t=1;
    cin>>t;
    for(int i=0;i<t;i++){
        // cout<<"Case #"<<i+1<<": "; 
       solve();
    }
}
